//-------------------------
// Autogenerated using t4 |
//-------------------------
syntax = "proto3";

import "google/protobuf/empty.proto";

service MusicBeeApiService {
  rpc MB_ReleaseString(MB_ReleaseString_Request)
      returns(google.protobuf.Empty);
  rpc MB_Trace(MB_Trace_Request)
      returns(google.protobuf.Empty);
  rpc Setting_GetPersistentStoragePath(google.protobuf.Empty)
      returns(Setting_GetPersistentStoragePath_Response);
  rpc Setting_GetSkin(google.protobuf.Empty)
      returns(Setting_GetSkin_Response);
  rpc Setting_GetSkinElementColour(Setting_GetSkinElementColour_Request)
      returns(Setting_GetSkinElementColour_Response);
  rpc Setting_IsWindowBordersSkinned(google.protobuf.Empty)
      returns(Setting_IsWindowBordersSkinned_Response);
  rpc Library_GetFileProperty(Library_GetFileProperty_Request)
      returns(Library_GetFileProperty_Response);
  rpc Library_GetFileTag(Library_GetFileTag_Request)
      returns(Library_GetFileTag_Response);
  rpc Library_SetFileTag(Library_SetFileTag_Request)
      returns(Library_SetFileTag_Response);
  rpc Library_CommitTagsToFile(Library_CommitTagsToFile_Request)
      returns(Library_CommitTagsToFile_Response);
  rpc Library_GetLyrics(Library_GetLyrics_Request)
      returns(Library_GetLyrics_Response);
  rpc Library_QueryFiles(Library_QueryFiles_Request)
      returns(Library_QueryFiles_Response);
  rpc Library_QueryGetNextFile(google.protobuf.Empty)
      returns(Library_QueryGetNextFile_Response);
  rpc Player_GetPosition(google.protobuf.Empty)
      returns(Player_GetPosition_Response);
  rpc Player_SetPosition(Player_SetPosition_Request)
      returns(Player_SetPosition_Response);
  rpc Player_GetPlayState(google.protobuf.Empty)
      returns(Player_GetPlayState_Response);
  rpc Player_PlayPause(google.protobuf.Empty)
      returns(Player_PlayPause_Response);
  rpc Player_Stop(google.protobuf.Empty)
      returns(Player_Stop_Response);
  rpc Player_StopAfterCurrent(google.protobuf.Empty)
      returns(Player_StopAfterCurrent_Response);
  rpc Player_PlayPreviousTrack(google.protobuf.Empty)
      returns(Player_PlayPreviousTrack_Response);
  rpc Player_PlayNextTrack(google.protobuf.Empty)
      returns(Player_PlayNextTrack_Response);
  rpc Player_StartAutoDj(google.protobuf.Empty)
      returns(Player_StartAutoDj_Response);
  rpc Player_EndAutoDj(google.protobuf.Empty)
      returns(Player_EndAutoDj_Response);
  rpc Player_GetVolume(google.protobuf.Empty)
      returns(Player_GetVolume_Response);
  rpc Player_SetVolume(Player_SetVolume_Request)
      returns(Player_SetVolume_Response);
  rpc Player_GetMute(google.protobuf.Empty)
      returns(Player_GetMute_Response);
  rpc Player_SetMute(Player_SetMute_Request)
      returns(Player_SetMute_Response);
  rpc Player_GetShuffle(google.protobuf.Empty)
      returns(Player_GetShuffle_Response);
  rpc Player_SetShuffle(Player_SetShuffle_Request)
      returns(Player_SetShuffle_Response);
  rpc Player_GetRepeat(google.protobuf.Empty)
      returns(Player_GetRepeat_Response);
  rpc Player_SetRepeat(Player_SetRepeat_Request)
      returns(Player_SetRepeat_Response);
  rpc Player_GetEqualiserEnabled(google.protobuf.Empty)
      returns(Player_GetEqualiserEnabled_Response);
  rpc Player_SetEqualiserEnabled(Player_SetEqualiserEnabled_Request)
      returns(Player_SetEqualiserEnabled_Response);
  rpc Player_GetDspEnabled(google.protobuf.Empty)
      returns(Player_GetDspEnabled_Response);
  rpc Player_SetDspEnabled(Player_SetDspEnabled_Request)
      returns(Player_SetDspEnabled_Response);
  rpc Player_GetScrobbleEnabled(google.protobuf.Empty)
      returns(Player_GetScrobbleEnabled_Response);
  rpc Player_SetScrobbleEnabled(Player_SetScrobbleEnabled_Request)
      returns(Player_SetScrobbleEnabled_Response);
  rpc NowPlaying_GetFileUrl(google.protobuf.Empty)
      returns(NowPlaying_GetFileUrl_Response);
  rpc NowPlaying_GetDuration(google.protobuf.Empty)
      returns(NowPlaying_GetDuration_Response);
  rpc NowPlaying_GetFileProperty(NowPlaying_GetFileProperty_Request)
      returns(NowPlaying_GetFileProperty_Response);
  rpc NowPlaying_GetFileTag(NowPlaying_GetFileTag_Request)
      returns(NowPlaying_GetFileTag_Response);
  rpc NowPlaying_GetLyrics(google.protobuf.Empty)
      returns(NowPlaying_GetLyrics_Response);
  rpc NowPlaying_GetArtwork(google.protobuf.Empty)
      returns(NowPlaying_GetArtwork_Response);
  rpc NowPlayingList_Clear(google.protobuf.Empty)
      returns(NowPlayingList_Clear_Response);
  rpc NowPlayingList_QueryFiles(NowPlayingList_QueryFiles_Request)
      returns(NowPlayingList_QueryFiles_Response);
  rpc NowPlayingList_QueryGetNextFile(google.protobuf.Empty)
      returns(NowPlayingList_QueryGetNextFile_Response);
  rpc NowPlayingList_PlayNow(NowPlayingList_PlayNow_Request)
      returns(NowPlayingList_PlayNow_Response);
  rpc NowPlayingList_QueueNext(NowPlayingList_QueueNext_Request)
      returns(NowPlayingList_QueueNext_Response);
  rpc NowPlayingList_QueueLast(NowPlayingList_QueueLast_Request)
      returns(NowPlayingList_QueueLast_Response);
  rpc NowPlayingList_PlayLibraryShuffled(google.protobuf.Empty)
      returns(NowPlayingList_PlayLibraryShuffled_Response);
  rpc Playlist_QueryPlaylists(google.protobuf.Empty)
      returns(Playlist_QueryPlaylists_Response);
  rpc Playlist_QueryGetNextPlaylist(google.protobuf.Empty)
      returns(Playlist_QueryGetNextPlaylist_Response);
  rpc Playlist_GetType(Playlist_GetType_Request)
      returns(Playlist_GetType_Response);
  rpc Playlist_QueryFiles(Playlist_QueryFiles_Request)
      returns(Playlist_QueryFiles_Response);
  rpc Playlist_QueryGetNextFile(google.protobuf.Empty)
      returns(Playlist_QueryGetNextFile_Response);
  rpc MB_RefreshPanels(google.protobuf.Empty)
      returns(google.protobuf.Empty);
  rpc MB_SendNotification(MB_SendNotification_Request)
      returns(google.protobuf.Empty);
  rpc Setting_GetFieldName(Setting_GetFieldName_Request)
      returns(Setting_GetFieldName_Response);
  rpc MB_SetBackgroundTaskMessage(MB_SetBackgroundTaskMessage_Request)
      returns(google.protobuf.Empty);
  rpc Player_GetShowTimeRemaining(google.protobuf.Empty)
      returns(Player_GetShowTimeRemaining_Response);
  rpc NowPlayingList_GetCurrentIndex(google.protobuf.Empty)
      returns(NowPlayingList_GetCurrentIndex_Response);
  rpc NowPlayingList_GetListFileUrl(NowPlayingList_GetListFileUrl_Request)
      returns(NowPlayingList_GetListFileUrl_Response);
  rpc NowPlayingList_GetFileProperty(NowPlayingList_GetFileProperty_Request)
      returns(NowPlayingList_GetFileProperty_Response);
  rpc NowPlayingList_GetFileTag(NowPlayingList_GetFileTag_Request)
      returns(NowPlayingList_GetFileTag_Response);
  rpc NowPlaying_GetSpectrumData(NowPlaying_GetSpectrumData_Request)
      returns(NowPlaying_GetSpectrumData_Response);
  rpc NowPlaying_GetSoundGraph(NowPlaying_GetSoundGraph_Request)
      returns(NowPlaying_GetSoundGraph_Response);
  rpc MB_GetLocalisation(MB_GetLocalisation_Request)
      returns(MB_GetLocalisation_Response);
  rpc NowPlayingList_IsAnyPriorTracks(google.protobuf.Empty)
      returns(NowPlayingList_IsAnyPriorTracks_Response);
  rpc NowPlayingList_IsAnyFollowingTracks(google.protobuf.Empty)
      returns(NowPlayingList_IsAnyFollowingTracks_Response);
  rpc Player_ShowEqualiser(google.protobuf.Empty)
      returns(Player_ShowEqualiser_Response);
  rpc Player_GetAutoDjEnabled(google.protobuf.Empty)
      returns(Player_GetAutoDjEnabled_Response);
  rpc Player_GetStopAfterCurrentEnabled(google.protobuf.Empty)
      returns(Player_GetStopAfterCurrentEnabled_Response);
  rpc Player_GetCrossfade(google.protobuf.Empty)
      returns(Player_GetCrossfade_Response);
  rpc Player_SetCrossfade(Player_SetCrossfade_Request)
      returns(Player_SetCrossfade_Response);
  rpc Player_GetReplayGainMode(google.protobuf.Empty)
      returns(Player_GetReplayGainMode_Response);
  rpc Player_SetReplayGainMode(Player_SetReplayGainMode_Request)
      returns(Player_SetReplayGainMode_Response);
  rpc Player_QueueRandomTracks(Player_QueueRandomTracks_Request)
      returns(Player_QueueRandomTracks_Response);
  rpc Setting_GetDataType(Setting_GetDataType_Request)
      returns(Setting_GetDataType_Response);
  rpc NowPlayingList_GetNextIndex(NowPlayingList_GetNextIndex_Request)
      returns(NowPlayingList_GetNextIndex_Response);
  rpc NowPlaying_GetArtistPicture(NowPlaying_GetArtistPicture_Request)
      returns(NowPlaying_GetArtistPicture_Response);
  rpc NowPlaying_GetDownloadedArtwork(google.protobuf.Empty)
      returns(NowPlaying_GetDownloadedArtwork_Response);
  rpc MB_ShowNowPlayingAssistant(google.protobuf.Empty)
      returns(MB_ShowNowPlayingAssistant_Response);
  rpc NowPlaying_GetDownloadedLyrics(google.protobuf.Empty)
      returns(NowPlaying_GetDownloadedLyrics_Response);
  rpc Player_GetShowRatingTrack(google.protobuf.Empty)
      returns(Player_GetShowRatingTrack_Response);
  rpc Player_GetShowRatingLove(google.protobuf.Empty)
      returns(Player_GetShowRatingLove_Response);
  rpc Setting_GetLastFmUserId(google.protobuf.Empty)
      returns(Setting_GetLastFmUserId_Response);
  rpc Playlist_GetName(Playlist_GetName_Request)
      returns(Playlist_GetName_Response);
  rpc Playlist_CreatePlaylist(Playlist_CreatePlaylist_Request)
      returns(Playlist_CreatePlaylist_Response);
  rpc Playlist_SetFiles(Playlist_SetFiles_Request)
      returns(Playlist_SetFiles_Response);
  rpc Library_QuerySimilarArtists(Library_QuerySimilarArtists_Request)
      returns(Library_QuerySimilarArtists_Response);
  rpc Library_QueryLookupTable(Library_QueryLookupTable_Request)
      returns(Library_QueryLookupTable_Response);
  rpc Library_QueryGetLookupTableValue(Library_QueryGetLookupTableValue_Request)
      returns(Library_QueryGetLookupTableValue_Response);
  rpc NowPlayingList_QueueFilesNext(NowPlayingList_QueueFilesNext_Request)
      returns(NowPlayingList_QueueFilesNext_Response);
  rpc NowPlayingList_QueueFilesLast(NowPlayingList_QueueFilesLast_Request)
      returns(NowPlayingList_QueueFilesLast_Response);
  rpc Setting_GetWebProxy(google.protobuf.Empty)
      returns(Setting_GetWebProxy_Response);
  rpc NowPlayingList_RemoveAt(NowPlayingList_RemoveAt_Request)
      returns(NowPlayingList_RemoveAt_Response);
  rpc Playlist_RemoveAt(Playlist_RemoveAt_Request)
      returns(Playlist_RemoveAt_Response);
  rpc MB_OpenFilterInTab(MB_OpenFilterInTab_Request)
      returns(MB_OpenFilterInTab_Response);
  rpc MB_SetWindowSize(MB_SetWindowSize_Request)
      returns(MB_SetWindowSize_Response);
  rpc Library_GetArtistPicture(Library_GetArtistPicture_Request)
      returns(Library_GetArtistPicture_Response);
  rpc Pending_GetFileUrl(google.protobuf.Empty)
      returns(Pending_GetFileUrl_Response);
  rpc Pending_GetFileProperty(Pending_GetFileProperty_Request)
      returns(Pending_GetFileProperty_Response);
  rpc Pending_GetFileTag(Pending_GetFileTag_Request)
      returns(Pending_GetFileTag_Response);
  rpc Player_GetButtonEnabled(Player_GetButtonEnabled_Request)
      returns(Player_GetButtonEnabled_Response);
  rpc NowPlayingList_MoveFiles(NowPlayingList_MoveFiles_Request)
      returns(NowPlayingList_MoveFiles_Response);
  rpc Library_GetArtworkUrl(Library_GetArtworkUrl_Request)
      returns(Library_GetArtworkUrl_Response);
  rpc Library_GetArtistPictureThumb(Library_GetArtistPictureThumb_Request)
      returns(Library_GetArtistPictureThumb_Response);
  rpc NowPlaying_GetArtworkUrl(google.protobuf.Empty)
      returns(NowPlaying_GetArtworkUrl_Response);
  rpc NowPlaying_GetDownloadedArtworkUrl(google.protobuf.Empty)
      returns(NowPlaying_GetDownloadedArtworkUrl_Response);
  rpc NowPlaying_GetArtistPictureThumb(google.protobuf.Empty)
      returns(NowPlaying_GetArtistPictureThumb_Response);
  rpc Playlist_IsInList(Playlist_IsInList_Request)
      returns(Playlist_IsInList_Response);
  rpc Library_GetArtistPictureUrls(Library_GetArtistPictureUrls_Request)
      returns(Library_GetArtistPictureUrls_Response);
  rpc NowPlaying_GetArtistPictureUrls(NowPlaying_GetArtistPictureUrls_Request)
      returns(NowPlaying_GetArtistPictureUrls_Response);
  rpc Playlist_AppendFiles(Playlist_AppendFiles_Request)
      returns(Playlist_AppendFiles_Response);
  rpc Sync_FileStart(Sync_FileStart_Request)
      returns(Sync_FileStart_Response);
  rpc Sync_FileEnd(Sync_FileEnd_Request)
      returns(google.protobuf.Empty);
  rpc Library_QueryFilesEx(Library_QueryFilesEx_Request)
      returns(Library_QueryFilesEx_Response);
  rpc NowPlayingList_QueryFilesEx(NowPlayingList_QueryFilesEx_Request)
      returns(NowPlayingList_QueryFilesEx_Response);
  rpc Playlist_QueryFilesEx(Playlist_QueryFilesEx_Request)
      returns(Playlist_QueryFilesEx_Response);
  rpc Playlist_MoveFiles(Playlist_MoveFiles_Request)
      returns(Playlist_MoveFiles_Response);
  rpc Playlist_PlayNow(Playlist_PlayNow_Request)
      returns(Playlist_PlayNow_Response);
  rpc NowPlaying_IsSoundtrack(google.protobuf.Empty)
      returns(NowPlaying_IsSoundtrack_Response);
  rpc NowPlaying_GetSoundtrackPictureUrls(NowPlaying_GetSoundtrackPictureUrls_Request)
      returns(NowPlaying_GetSoundtrackPictureUrls_Response);
  rpc Library_GetDevicePersistentId(Library_GetDevicePersistentId_Request)
      returns(Library_GetDevicePersistentId_Response);
  rpc Library_SetDevicePersistentId(Library_SetDevicePersistentId_Request)
      returns(Library_SetDevicePersistentId_Response);
  rpc Library_FindDevicePersistentId(Library_FindDevicePersistentId_Request)
      returns(Library_FindDevicePersistentId_Response);
  rpc Library_AddFileToLibrary(Library_AddFileToLibrary_Request)
      returns(Library_AddFileToLibrary_Response);
  rpc Playlist_DeletePlaylist(Playlist_DeletePlaylist_Request)
      returns(Playlist_DeletePlaylist_Response);
  rpc Library_GetFileTags(Library_GetFileTags_Request)
      returns(Library_GetFileTags_Response);
  rpc NowPlaying_GetFileTags(NowPlaying_GetFileTags_Request)
      returns(NowPlaying_GetFileTags_Response);
  rpc NowPlayingList_GetFileTags(NowPlayingList_GetFileTags_Request)
      returns(NowPlayingList_GetFileTags_Response);
  rpc MB_DownloadFile(MB_DownloadFile_Request)
      returns(MB_DownloadFile_Response);
  rpc Setting_GetFileConvertCommandLine(Setting_GetFileConvertCommandLine_Request)
      returns(Setting_GetFileConvertCommandLine_Response);
  rpc Player_OpenStreamHandle(Player_OpenStreamHandle_Request)
      returns(Player_OpenStreamHandle_Response);
  rpc Player_UpdatePlayStatistics(Player_UpdatePlayStatistics_Request)
      returns(Player_UpdatePlayStatistics_Response);
  rpc Library_GetArtworkEx(Library_GetArtworkEx_Request)
      returns(Library_GetArtworkEx_Response);
  rpc Library_SetArtworkEx(Library_SetArtworkEx_Request)
      returns(Library_SetArtworkEx_Response);
  rpc MB_GetVisualiserInformation(google.protobuf.Empty)
      returns(MB_GetVisualiserInformation_Response);
  rpc MB_ShowVisualiser(MB_ShowVisualiser_Request)
      returns(MB_ShowVisualiser_Response);
  rpc MB_GetPluginViewInformation(MB_GetPluginViewInformation_Request)
      returns(MB_GetPluginViewInformation_Response);
  rpc MB_ShowPluginView(MB_ShowPluginView_Request)
      returns(MB_ShowPluginView_Response);
  rpc Player_GetOutputDevices(google.protobuf.Empty)
      returns(Player_GetOutputDevices_Response);
  rpc Player_SetOutputDevice(Player_SetOutputDevice_Request)
      returns(Player_SetOutputDevice_Response);
  rpc MB_UninstallPlugin(MB_UninstallPlugin_Request)
      returns(MB_UninstallPlugin_Response);
  rpc Player_PlayPreviousAlbum(google.protobuf.Empty)
      returns(Player_PlayPreviousAlbum_Response);
  rpc Player_PlayNextAlbum(google.protobuf.Empty)
      returns(Player_PlayNextAlbum_Response);
  rpc Podcasts_QuerySubscriptions(Podcasts_QuerySubscriptions_Request)
      returns(Podcasts_QuerySubscriptions_Response);
  rpc Podcasts_GetSubscription(Podcasts_GetSubscription_Request)
      returns(Podcasts_GetSubscription_Response);
  rpc Podcasts_GetSubscriptionArtwork(Podcasts_GetSubscriptionArtwork_Request)
      returns(Podcasts_GetSubscriptionArtwork_Response);
  rpc Podcasts_GetSubscriptionEpisodes(Podcasts_GetSubscriptionEpisodes_Request)
      returns(Podcasts_GetSubscriptionEpisodes_Response);
  rpc Podcasts_GetSubscriptionEpisode(Podcasts_GetSubscriptionEpisode_Request)
      returns(Podcasts_GetSubscriptionEpisode_Response);
  rpc NowPlaying_GetSoundGraphEx(NowPlaying_GetSoundGraphEx_Request)
      returns(NowPlaying_GetSoundGraphEx_Response);
  rpc Sync_FileDeleteStart(Sync_FileDeleteStart_Request)
      returns(Sync_FileDeleteStart_Response);
  rpc Sync_FileDeleteEnd(Sync_FileDeleteEnd_Request)
      returns(google.protobuf.Empty);
}

message MB_ReleaseString_Request {
  string p1 = 1;
}

message MB_Trace_Request {
  string p1 = 1;
}

message Setting_GetPersistentStoragePath_Response {
  string result = 1;
}

message Setting_GetSkin_Response {
  string result = 1;
}

message Setting_GetSkinElementColour_Request {
  int32 element = 1;
  int32 state = 2;
  int32 component = 3;
}

message Setting_GetSkinElementColour_Response {
  int32 result = 1;
}

message Setting_IsWindowBordersSkinned_Response {
  bool result = 1;
}

message Library_GetFileProperty_Request {
  string sourceFileUrl = 1;
  int32 type = 2;
}

message Library_GetFileProperty_Response {
  string result = 1;
}

message Library_GetFileTag_Request {
  string sourceFileUrl = 1;
  int32 field = 2;
}

message Library_GetFileTag_Response {
  string result = 1;
}

message Library_SetFileTag_Request {
  string sourceFileUrl = 1;
  int32 field = 2;
  string value = 3;
}

message Library_SetFileTag_Response {
  bool result = 1;
}

message Library_CommitTagsToFile_Request {
  string sourceFileUrl = 1;
}

message Library_CommitTagsToFile_Response {
  bool result = 1;
}

message Library_GetLyrics_Request {
  string sourceFileUrl = 1;
  int32 type = 2;
}

message Library_GetLyrics_Response {
  string result = 1;
}

message Library_QueryFiles_Request {
  string query = 1;
}

message Library_QueryFiles_Response {
  bool result = 1;
}

message Library_QueryGetNextFile_Response {
  string result = 1;
}

message Player_GetPosition_Response {
  int32 result = 1;
}

message Player_SetPosition_Request {
  int32 position = 1;
}

message Player_SetPosition_Response {
  bool result = 1;
}

message Player_GetPlayState_Response {
  int32 result = 1;
}

message Player_PlayPause_Response {
  bool result = 1;
}

message Player_Stop_Response {
  bool result = 1;
}

message Player_StopAfterCurrent_Response {
  bool result = 1;
}

message Player_PlayPreviousTrack_Response {
  bool result = 1;
}

message Player_PlayNextTrack_Response {
  bool result = 1;
}

message Player_StartAutoDj_Response {
  bool result = 1;
}

message Player_EndAutoDj_Response {
  bool result = 1;
}

message Player_GetVolume_Response {
  float result = 1;
}

message Player_SetVolume_Request {
  float volume = 1;
}

message Player_SetVolume_Response {
  bool result = 1;
}

message Player_GetMute_Response {
  bool result = 1;
}

message Player_SetMute_Request {
  bool mute = 1;
}

message Player_SetMute_Response {
  bool result = 1;
}

message Player_GetShuffle_Response {
  bool result = 1;
}

message Player_SetShuffle_Request {
  bool shuffle = 1;
}

message Player_SetShuffle_Response {
  bool result = 1;
}

message Player_GetRepeat_Response {
  int32 result = 1;
}

message Player_SetRepeat_Request {
  int32 repeat = 1;
}

message Player_SetRepeat_Response {
  bool result = 1;
}

message Player_GetEqualiserEnabled_Response {
  bool result = 1;
}

message Player_SetEqualiserEnabled_Request {
  bool enabled = 1;
}

message Player_SetEqualiserEnabled_Response {
  bool result = 1;
}

message Player_GetDspEnabled_Response {
  bool result = 1;
}

message Player_SetDspEnabled_Request {
  bool enabled = 1;
}

message Player_SetDspEnabled_Response {
  bool result = 1;
}

message Player_GetScrobbleEnabled_Response {
  bool result = 1;
}

message Player_SetScrobbleEnabled_Request {
  bool enabled = 1;
}

message Player_SetScrobbleEnabled_Response {
  bool result = 1;
}

message NowPlaying_GetFileUrl_Response {
  string result = 1;
}

message NowPlaying_GetDuration_Response {
  int32 result = 1;
}

message NowPlaying_GetFileProperty_Request {
  int32 type = 1;
}

message NowPlaying_GetFileProperty_Response {
  string result = 1;
}

message NowPlaying_GetFileTag_Request {
  int32 field = 1;
}

message NowPlaying_GetFileTag_Response {
  string result = 1;
}

message NowPlaying_GetLyrics_Response {
  string result = 1;
}

message NowPlaying_GetArtwork_Response {
  string result = 1;
}

message NowPlayingList_Clear_Response {
  bool result = 1;
}

message NowPlayingList_QueryFiles_Request {
  string query = 1;
}

message NowPlayingList_QueryFiles_Response {
  bool result = 1;
}

message NowPlayingList_QueryGetNextFile_Response {
  string result = 1;
}

message NowPlayingList_PlayNow_Request {
  string sourceFileUrl = 1;
}

message NowPlayingList_PlayNow_Response {
  bool result = 1;
}

message NowPlayingList_QueueNext_Request {
  string sourceFileUrl = 1;
}

message NowPlayingList_QueueNext_Response {
  bool result = 1;
}

message NowPlayingList_QueueLast_Request {
  string sourceFileUrl = 1;
}

message NowPlayingList_QueueLast_Response {
  bool result = 1;
}

message NowPlayingList_PlayLibraryShuffled_Response {
  bool result = 1;
}

message Playlist_QueryPlaylists_Response {
  bool result = 1;
}

message Playlist_QueryGetNextPlaylist_Response {
  string result = 1;
}

message Playlist_GetType_Request {
  string playlistUrl = 1;
}

message Playlist_GetType_Response {
  int32 result = 1;
}

message Playlist_QueryFiles_Request {
  string playlistUrl = 1;
}

message Playlist_QueryFiles_Response {
  bool result = 1;
}

message Playlist_QueryGetNextFile_Response {
  string result = 1;
}

message MB_SendNotification_Request {
  int32 type = 1;
}

message Setting_GetFieldName_Request {
  int32 field = 1;
}

message Setting_GetFieldName_Response {
  string result = 1;
}

message MB_SetBackgroundTaskMessage_Request {
  string message = 1;
}

message Player_GetShowTimeRemaining_Response {
  bool result = 1;
}

message NowPlayingList_GetCurrentIndex_Response {
  int32 result = 1;
}

message NowPlayingList_GetListFileUrl_Request {
  int32 index = 1;
}

message NowPlayingList_GetListFileUrl_Response {
  string result = 1;
}

message NowPlayingList_GetFileProperty_Request {
  int32 index = 1;
  int32 type = 2;
}

message NowPlayingList_GetFileProperty_Response {
  string result = 1;
}

message NowPlayingList_GetFileTag_Request {
  int32 index = 1;
  int32 field = 2;
}

message NowPlayingList_GetFileTag_Response {
  string result = 1;
}

message NowPlaying_GetSpectrumData_Request {
  repeated float fftData = 1;
}

message NowPlaying_GetSpectrumData_Response {
  int32 result = 1;
}

message NowPlaying_GetSoundGraph_Request {
  repeated float graphData = 1;
}

message NowPlaying_GetSoundGraph_Response {
  bool result = 1;
}

message MB_GetLocalisation_Request {
  string id = 1;
  string defaultText = 2;
}

message MB_GetLocalisation_Response {
  string result = 1;
}

message NowPlayingList_IsAnyPriorTracks_Response {
  bool result = 1;
}

message NowPlayingList_IsAnyFollowingTracks_Response {
  bool result = 1;
}

message Player_ShowEqualiser_Response {
  bool result = 1;
}

message Player_GetAutoDjEnabled_Response {
  bool result = 1;
}

message Player_GetStopAfterCurrentEnabled_Response {
  bool result = 1;
}

message Player_GetCrossfade_Response {
  bool result = 1;
}

message Player_SetCrossfade_Request {
  bool crossfade = 1;
}

message Player_SetCrossfade_Response {
  bool result = 1;
}

message Player_GetReplayGainMode_Response {
  int32 result = 1;
}

message Player_SetReplayGainMode_Request {
  int32 mode = 1;
}

message Player_SetReplayGainMode_Response {
  bool result = 1;
}

message Player_QueueRandomTracks_Request {
  int32 count = 1;
}

message Player_QueueRandomTracks_Response {
  int32 result = 1;
}

message Setting_GetDataType_Request {
  int32 field = 1;
}

message Setting_GetDataType_Response {
  int32 result = 1;
}

message NowPlayingList_GetNextIndex_Request {
  int32 offset = 1;
}

message NowPlayingList_GetNextIndex_Response {
  int32 result = 1;
}

message NowPlaying_GetArtistPicture_Request {
  int32 fadingPercent = 1;
}

message NowPlaying_GetArtistPicture_Response {
  string result = 1;
}

message NowPlaying_GetDownloadedArtwork_Response {
  string result = 1;
}

message MB_ShowNowPlayingAssistant_Response {
  bool result = 1;
}

message NowPlaying_GetDownloadedLyrics_Response {
  string result = 1;
}

message Player_GetShowRatingTrack_Response {
  bool result = 1;
}

message Player_GetShowRatingLove_Response {
  bool result = 1;
}

message Setting_GetLastFmUserId_Response {
  string result = 1;
}

message Playlist_GetName_Request {
  string playlistUrl = 1;
}

message Playlist_GetName_Response {
  string result = 1;
}

message Playlist_CreatePlaylist_Request {
  string folderName = 1;
  string playlistName = 2;
  repeated string filenames = 3;
}

message Playlist_CreatePlaylist_Response {
  string result = 1;
}

message Playlist_SetFiles_Request {
  string playlistUrl = 1;
  repeated string filenames = 2;
}

message Playlist_SetFiles_Response {
  bool result = 1;
}

message Library_QuerySimilarArtists_Request {
  string artistName = 1;
  double minimumArtistSimilarityRating = 2;
}

message Library_QuerySimilarArtists_Response {
  string result = 1;
}

message Library_QueryLookupTable_Request {
  string keyTags = 1;
  string valueTags = 2;
  string query = 3;
}

message Library_QueryLookupTable_Response {
  bool result = 1;
}

message Library_QueryGetLookupTableValue_Request {
  string key = 1;
}

message Library_QueryGetLookupTableValue_Response {
  string result = 1;
}

message NowPlayingList_QueueFilesNext_Request {
  repeated string sourceFileUrl = 1;
}

message NowPlayingList_QueueFilesNext_Response {
  bool result = 1;
}

message NowPlayingList_QueueFilesLast_Request {
  repeated string sourceFileUrl = 1;
}

message NowPlayingList_QueueFilesLast_Response {
  bool result = 1;
}

message Setting_GetWebProxy_Response {
  string result = 1;
}

message NowPlayingList_RemoveAt_Request {
  int32 index = 1;
}

message NowPlayingList_RemoveAt_Response {
  bool result = 1;
}

message Playlist_RemoveAt_Request {
  string playlistUrl = 1;
  int32 index = 2;
}

message Playlist_RemoveAt_Response {
  bool result = 1;
}

message MB_OpenFilterInTab_Request {
  int32 field1 = 1;
  int32 comparison1 = 2;
  string value1 = 3;
  int32 field2 = 4;
  int32 comparison2 = 5;
  string value2 = 6;
}

message MB_OpenFilterInTab_Response {
  bool result = 1;
}

message MB_SetWindowSize_Request {
  int32 width = 1;
  int32 height = 2;
}

message MB_SetWindowSize_Response {
  bool result = 1;
}

message Library_GetArtistPicture_Request {
  string artistName = 1;
  int32 fadingPercent = 2;
  int32 fadingColor = 3;
}

message Library_GetArtistPicture_Response {
  string result = 1;
}

message Pending_GetFileUrl_Response {
  string result = 1;
}

message Pending_GetFileProperty_Request {
  int32 field = 1;
}

message Pending_GetFileProperty_Response {
  string result = 1;
}

message Pending_GetFileTag_Request {
  int32 field = 1;
}

message Pending_GetFileTag_Response {
  string result = 1;
}

message Player_GetButtonEnabled_Request {
  int32 button = 1;
}

message Player_GetButtonEnabled_Response {
  bool result = 1;
}

message NowPlayingList_MoveFiles_Request {
  repeated int32 fromIndices = 1;
  int32 toIndex = 2;
}

message NowPlayingList_MoveFiles_Response {
  bool result = 1;
}

message Library_GetArtworkUrl_Request {
  string sourceFileUrl = 1;
  int32 index = 2;
}

message Library_GetArtworkUrl_Response {
  string result = 1;
}

message Library_GetArtistPictureThumb_Request {
  string artistName = 1;
}

message Library_GetArtistPictureThumb_Response {
  string result = 1;
}

message NowPlaying_GetArtworkUrl_Response {
  string result = 1;
}

message NowPlaying_GetDownloadedArtworkUrl_Response {
  string result = 1;
}

message NowPlaying_GetArtistPictureThumb_Response {
  string result = 1;
}

message Playlist_IsInList_Request {
  string playlistUrl = 1;
  string filename = 2;
}

message Playlist_IsInList_Response {
  bool result = 1;
}

message Library_GetArtistPictureUrls_Request {
  string artistName = 1;
  bool localOnly = 2;
}

message Library_GetArtistPictureUrls_Response {
  bool result = 1;
  repeated string urls = 2;
}

message NowPlaying_GetArtistPictureUrls_Request {
  bool localOnly = 1;
}

message NowPlaying_GetArtistPictureUrls_Response {
  bool result = 1;
  repeated string urls = 2;
}

message Playlist_AppendFiles_Request {
  string playlistUrl = 1;
  repeated string filenames = 2;
}

message Playlist_AppendFiles_Response {
  bool result = 1;
}

message Sync_FileStart_Request {
  string filename = 1;
}

message Sync_FileStart_Response {
  string result = 1;
}

message Sync_FileEnd_Request {
  string filename = 1;
  bool success = 2;
  string errorMessage = 3;
}

message Library_QueryFilesEx_Request {
  string query = 1;
}

message Library_QueryFilesEx_Response {
  bool result = 1;
  repeated string files = 2;
}

message NowPlayingList_QueryFilesEx_Request {
  string query = 1;
}

message NowPlayingList_QueryFilesEx_Response {
  bool result = 1;
  repeated string files = 2;
}

message Playlist_QueryFilesEx_Request {
  string playlistUrl = 1;
}

message Playlist_QueryFilesEx_Response {
  bool result = 1;
  repeated string filenames = 2;
}

message Playlist_MoveFiles_Request {
  string playlistUrl = 1;
  repeated int32 fromIndices = 2;
  int32 toIndex = 3;
}

message Playlist_MoveFiles_Response {
  bool result = 1;
}

message Playlist_PlayNow_Request {
  string playlistUrl = 1;
}

message Playlist_PlayNow_Response {
  bool result = 1;
}

message NowPlaying_IsSoundtrack_Response {
  bool result = 1;
}

message NowPlaying_GetSoundtrackPictureUrls_Request {
  bool localOnly = 1;
}

message NowPlaying_GetSoundtrackPictureUrls_Response {
  bool result = 1;
  repeated string urls = 2;
}

message Library_GetDevicePersistentId_Request {
  string sourceFileUrl = 1;
  int32 idType = 2;
}

message Library_GetDevicePersistentId_Response {
  string result = 1;
}

message Library_SetDevicePersistentId_Request {
  string sourceFileUrl = 1;
  int32 idType = 2;
  string value = 3;
}

message Library_SetDevicePersistentId_Response {
  bool result = 1;
}

message Library_FindDevicePersistentId_Request {
  int32 idType = 1;
  repeated string ids = 2;
}

message Library_FindDevicePersistentId_Response {
  bool result = 1;
  repeated string values = 2;
}

message Library_AddFileToLibrary_Request {
  string sourceFileUrl = 1;
  int32 category = 2;
}

message Library_AddFileToLibrary_Response {
  string result = 1;
}

message Playlist_DeletePlaylist_Request {
  string playlistUrl = 1;
}

message Playlist_DeletePlaylist_Response {
  bool result = 1;
}

message Library_GetFileTags_Request {
  string sourceFileUrl = 1;
  repeated int32 fields = 2;
}

message Library_GetFileTags_Response {
  bool result = 1;
  repeated string results = 2;
}

message NowPlaying_GetFileTags_Request {
  repeated int32 fields = 1;
}

message NowPlaying_GetFileTags_Response {
  bool result = 1;
  repeated string results = 2;
}

message NowPlayingList_GetFileTags_Request {
  int32 index = 1;
  repeated int32 fields = 2;
}

message NowPlayingList_GetFileTags_Response {
  bool result = 1;
  repeated string results = 2;
}

message MB_DownloadFile_Request {
  string url = 1;
  int32 target = 2;
  string targetFolder = 3;
  bool cancelDownload = 4;
}

message MB_DownloadFile_Response {
  bool result = 1;
}

message Setting_GetFileConvertCommandLine_Request {
  int32 codec = 1;
  int32 encodeQuality = 2;
}

message Setting_GetFileConvertCommandLine_Response {
  string result = 1;
}

message Player_OpenStreamHandle_Request {
  string url = 1;
  bool useMusicBeeSettings = 2;
  bool enableDsp = 3;
  int32 gainType = 4;
}

message Player_OpenStreamHandle_Response {
  int32 result = 1;
}

message Player_UpdatePlayStatistics_Request {
  string url = 1;
  int32 countType = 2;
  bool disableScrobble = 3;
}

message Player_UpdatePlayStatistics_Response {
  bool result = 1;
}

message Library_GetArtworkEx_Request {
  string sourceFileUrl = 1;
  int32 index = 2;
  bool retrievePictureData = 3;
}

message Library_GetArtworkEx_Response {
  bool result = 1;
  int32 pictureLocations = 2;
  string pictureUrl = 3;
  bytes imageData = 4;
}

message Library_SetArtworkEx_Request {
  string sourceFileUrl = 1;
  int32 index = 2;
  bytes imageData = 3;
}

message Library_SetArtworkEx_Response {
  bool result = 1;
}

message MB_GetVisualiserInformation_Response {
  bool result = 1;
  repeated string visualiserNames = 2;
  string defaultVisualiserName = 3;
  int32 defaultState = 4;
  int32 currentState = 5;
}

message MB_ShowVisualiser_Request {
  string visualiserName = 1;
  int32 state = 2;
}

message MB_ShowVisualiser_Response {
  bool result = 1;
}

message MB_GetPluginViewInformation_Request {
  string pluginFilename = 1;
}

message MB_GetPluginViewInformation_Response {
  bool result = 1;
  repeated string viewNames = 2;
  string defaultViewName = 3;
  int32 defaultState = 4;
  int32 currentState = 5;
}

message MB_ShowPluginView_Request {
  string pluginFilename = 1;
  string viewName = 2;
  int32 state = 3;
}

message MB_ShowPluginView_Response {
  bool result = 1;
}

message Player_GetOutputDevices_Response {
  bool result = 1;
  repeated string deviceNames = 2;
  string activeDeviceName = 3;
}

message Player_SetOutputDevice_Request {
  string deviceName = 1;
}

message Player_SetOutputDevice_Response {
  bool result = 1;
}

message MB_UninstallPlugin_Request {
  string pluginFilename = 1;
  string password = 2;
}

message MB_UninstallPlugin_Response {
  bool result = 1;
}

message Player_PlayPreviousAlbum_Response {
  bool result = 1;
}

message Player_PlayNextAlbum_Response {
  bool result = 1;
}

message Podcasts_QuerySubscriptions_Request {
  string query = 1;
}

message Podcasts_QuerySubscriptions_Response {
  bool result = 1;
  repeated string ids = 2;
}

message Podcasts_GetSubscription_Request {
  string id = 1;
}

message Podcasts_GetSubscription_Response {
  bool result = 1;
  repeated string subscription = 2;
}

message Podcasts_GetSubscriptionArtwork_Request {
  string id = 1;
  int32 index = 2;
}

message Podcasts_GetSubscriptionArtwork_Response {
  bool result = 1;
  bytes imageData = 2;
}

message Podcasts_GetSubscriptionEpisodes_Request {
  string id = 1;
}

message Podcasts_GetSubscriptionEpisodes_Response {
  bool result = 1;
  repeated string urls = 2;
}

message Podcasts_GetSubscriptionEpisode_Request {
  string id = 1;
  int32 index = 2;
}

message Podcasts_GetSubscriptionEpisode_Response {
  bool result = 1;
  repeated string episode = 2;
}

message NowPlaying_GetSoundGraphEx_Request {
  repeated float graphData = 1;
  repeated float peakData = 2;
}

message NowPlaying_GetSoundGraphEx_Response {
  bool result = 1;
}

message Sync_FileDeleteStart_Request {
  string filename = 1;
}

message Sync_FileDeleteStart_Response {
  string result = 1;
}

message Sync_FileDeleteEnd_Request {
  string filename = 1;
  bool success = 2;
  string errorMessage = 3;
}

